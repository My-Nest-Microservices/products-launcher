version: '3'

services:
  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${CLIENT_GATEWAY_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
    depends_on:
      - nats-server

  nats-server:
    image: nats:latest
    ports:
      - 8222:8222

  products-ms:
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=file:./dev.db
    depends_on:
      - nats-server
      - client-gateway

  orders-db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ordersdb
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data

  orders-ms:
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=postgresql://postgres:postgres@orders-db:5432/ordersdb?schema=public
    depends_on:
      - nats-server
      - client-gateway
      - orders-db

  payments-ms:
    build: ./payments-ms
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    ports:
      - 3003:3003
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - SUCCESS_URL=${SUCCESS_URL}
      - CANCEL_URL=${CANCEL_URL}
    depends_on:
      - nats-server
      - client-gateway
